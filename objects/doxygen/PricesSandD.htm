<html xmlns:v="urn:schemas-microsoft-com:vml"
xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:w="urn:schemas-microsoft-com:office:word"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta name=Title content="Prices, Supplies and Demands in ObjECTS MiniCAM">
<meta name=Keywords content="">
<meta http-equiv=Content-Type content="text/html; charset=macintosh">
<meta name=ProgId content=Word.Document>
<meta name=Generator content="Microsoft Word 10">
<meta name=Originator content="Microsoft Word 10">
<link rel=File-List href="PricesSandD_files/filelist.xml">
<title>Prices, Supplies and Demands in ObjECTS MiniCAM</title>
<!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Author>Steve Smith</o:Author>
  <o:Template>Normal</o:Template>
  <o:LastAuthor>Steve Smith</o:LastAuthor>
  <o:Revision>2</o:Revision>
  <o:TotalTime>0</o:TotalTime>
  <o:Created>2003-03-28T19:44:00Z</o:Created>
  <o:LastSaved>2003-03-28T19:47:00Z</o:LastSaved>
  <o:Pages>3</o:Pages>
  <o:Words>955</o:Words>
  <o:Characters>5447</o:Characters>
  <o:Company>JGCRI</o:Company>
  <o:Lines>45</o:Lines>
  <o:Paragraphs>10</o:Paragraphs>
  <o:CharactersWithSpaces>6689</o:CharactersWithSpaces>
  <o:Version>10.2418</o:Version>
 </o:DocumentProperties>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <w:WordDocument>
  <w:Zoom>125</w:Zoom>
  <w:DisplayHorizontalDrawingGridEvery>0</w:DisplayHorizontalDrawingGridEvery>
  <w:DisplayVerticalDrawingGridEvery>0</w:DisplayVerticalDrawingGridEvery>
  <w:UseMarginsForDrawingGridOrigin/>
  <w:Compatibility>
   <w:SpaceForUL/>
   <w:BalanceSingleByteDoubleByteWidth/>
   <w:DoNotLeaveBackslashAlone/>
   <w:ULTrailSpace/>
   <w:DoNotExpandShiftReturn/>
   <w:AdjustLineHeightInTable/>
  </w:Compatibility>
 </w:WordDocument>
</xml><![endif]-->
<style>
<!--
 /* Font Definitions */
@font-face
	{font-family:"Times New Roman";
	panose-1:0 2 2 6 3 5 4 5 2 3;
	mso-font-charset:0;
	mso-generic-font-family:auto;
	mso-font-pitch:variable;
	mso-font-signature:50331648 0 0 0 1 0;}
@font-face
	{font-family:Monaco;
	panose-1:0 2 0 5 0 0 0 0 0 0;
	mso-font-charset:0;
	mso-generic-font-family:auto;
	mso-font-pitch:variable;
	mso-font-signature:50331648 0 0 0 1 0;}
 /* Style Definitions */
p.MsoNormal, li.MsoNormal, div.MsoNormal
	{mso-style-parent:"";
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:Times;}
h1
	{mso-style-next:Normal;
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	page-break-after:avoid;
	mso-outline-level:1;
	font-size:12.0pt;
	font-family:Times;
	color:black;
	mso-font-kerning:0pt;}
@page Section1
	{size:8.5in 11.0in;
	margin:1.0in 1.25in 1.0in 1.25in;
	mso-header-margin:.5in;
	mso-footer-margin:.5in;
	mso-paper-source:0;}
div.Section1
	{page:Section1;}
 /* List Definitions */
@list l0
	{mso-list-id:965744837;
	mso-list-type:hybrid;
	mso-list-template-ids:76178674 -1814391570 1639433 1770505 984073 1639433 1770505 984073 1639433 1770505;}
@list l0:level1
	{mso-level-text:"%1\)";
	mso-level-tab-stop:.75in;
	mso-level-number-position:left;
	margin-left:.75in;
	text-indent:-.25in;}
ol
	{margin-bottom:0in;}
ul
	{margin-bottom:0in;}
-->
</style>
<!--[if gte mso 9]><xml>
 <o:shapedefaults v:ext="edit" spidmax="1027"/>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <o:shapelayout v:ext="edit">
  <o:idmap v:ext="edit" data="1"/>
 </o:shapelayout></xml><![endif]-->
</head>

<body bgcolor=white lang=EN-US style='tab-interval:.5in'>

<div class=Section1>

(Note -- function definitions may have changed since this document was written.)
</p>
</p>
<p class=MsoNormal><span style='color:black'><b>PRICES</b></span><span
style='color:black'><o:p></o:p></span></p>

<p class=MsoNormal><span style='color:black'>The ObjECTS MiniCAM calculates prices much as in the previous versions of the MiniCAM model. These prices are then stored in the
marketplace. All supply and demand sectors obtain prices of both primary and
secondary goods from the marketplace object. Resource prices are obtained
through the solution mechanism and secondary goods prices are set directly
(unless there is a simultaneity, see below) -- but the method for obtaining
those prices is always the same:<o:p></o:p></span></p>

<p class=MsoNormal><span style='font-size:9.0pt;color:black'><span
style='mso-tab-count:1'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span
style='font-size:9.0pt;font-family:Monaco;color:black'>price =
marketplace.showprice( goodName, regionName, period )<o:p></o:p></span></p>

<p class=MsoNormal><span style='color:black'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal><span style='color:black'>The prices are set differently,
depending on the market.<o:p></o:p></span></p>

<p class=MsoNormal><span style='color:black'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal><span style='color:black'>For markets that are solved, such
as resource markets, then the price is supplied by the solution mechanism.
Prices for the base year (1975) are read in (doesn't solve for first year). <o:p></o:p></span></p>

<p class=MsoNormal><span style='color:black'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal><span style='color:black'>For supply prices in markets that
are not solved, the price is set in region::</span><span style='font-size:9.0pt;
font-family:Monaco;color:black'> finalsupplyprc</span><span style='color:black'>
as:<o:p></o:p></span></p>

<p class=MsoNormal><span style='color:black'><span style='mso-tab-count:1'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span
style='font-size:9.0pt;font-family:Monaco;color:black'>marketplace.setprice(
goodName, regionName, goodPrice, period );</span><span style='color:black'><o:p></o:p></span></p>

<p class=MsoNormal><span style='color:black'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal><span style='color:black'>(carbon prices use a GHG number
instead of type)<o:p></o:p></span></p>

<p class=MsoNormal><span style='color:black'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal><span style='color:black'><b>SUPPLY</b></span><span
style='color:black'><o:p></o:p></span></p>

<p class=MsoNormal><span style='color:black'>The supply sectors determine the
price of the supplied intermediate good, much as in MiniCAM.<o:p></o:p></span></p>

<p class=MsoNormal><span style='color:black'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal><span style='color:black'>Each market in the marketplace
also has a supply associated with it.<o:p></o:p></span></p>

<p class=MsoNormal><span style='color:black'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal><span style='color:black'>The supply of each is set by the
resource sectors:<o:p></o:p></span></p>

<p class=MsoNormal><span style='color:black'><span style='mso-tab-count:1'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span
style='font-size:9.0pt;font-family:Monaco;color:black'>marketplace.setsupply<o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:.5in'><span style='font-size:9.0pt;
font-family:Monaco;color:black'>(goodName,regionName,resources[i]-&gt;showannualprod(period),
period)</span><span style='color:black'><o:p></o:p></span></p>

<p class=MsoNormal><span style='color:black'>and by the secondary supply
sectors via;<o:p></o:p></span></p>

<p class=MsoNormal><span style='color:black'><span style='mso-tab-count:1'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span
style='font-size:9.0pt;font-family:Monaco;color:black'>marketplace.setsupply(
goodName,RegionName,mrksupply, period)</span><span style='color:black'><o:p></o:p></span></p>

<p class=MsoNormal><span style='color:black'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal><span style='color:black'>This function is cumulative -- it
adds the supply (for the current model iteration) each time it is called.<o:p></o:p></span></p>

<p class=MsoNormal><span style='color:black'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal><span style='color:black'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal><span style='color:black'><b>DEMAND</b></span><span
style='color:black'><o:p></o:p></span></p>

<p class=MsoNormal><span style='color:black'>Demands for primary (and
secondary) goods can occur at any point in the model (e.g., refinery sector,
transformation sectors, end-use demand sectors, etc.). Any of these demands are
added to the marketplace by calling:<o:p></o:p></span></p>

<p class=MsoNormal><span style='color:black'><span style='mso-tab-count:1'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span
style='font-size:9.0pt;font-family:Monaco;color:black'>marketplace.setdemand(
goodName,RegionName,demand_value,period );</span><span style='color:black'><o:p></o:p></span></p>

<p class=MsoNormal><span style='color:black'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal><span style='color:black'>Using this structure there is no
explicit accounting for demands necessary, any sector that demands a fuel adds
their demand to the total held in the marketplace by calling this function.<o:p></o:p></span></p>

<p class=MsoNormal><span style='color:black'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal><span style='color:black'><b>SUPPLY &amp; DEMAND Equality</b></span><span
style='color:black'><o:p></o:p></span></p>

<p class=MsoNormal><span style='color:black'>For markets that are not solved by
the solution mechanism, the supplies and demands are set equal in two parts.
This occurs within routine . <o:p></o:p></span></p>

<p class=MsoNormal><span style='color:black'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal><span style='color:black'>Once total demand is determined,
the total demand is propagated through the supply<span style="mso-spacerun:
yes">&nbsp; </span>sectors in the </span><span style='font-size:9.0pt;
font-family:Monaco;color:black'>sector.supply</span><span style='color:black'>
routine via:<o:p></o:p></span></p>

<p class=MsoNormal><span style='font-size:9.0pt;font-family:Monaco;color:black'><span
style='mso-tab-count:1'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>mrkdmd
= marketplace.showdemand( goodName, RegionName, period )</span><span
style='color:black'><o:p></o:p></span></p>

<p class=MsoNormal><span style='color:black'><span style='mso-tab-count:1'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span
style='font-size:9.0pt;font-family:Monaco;color:black'>subsec[i].setoutput(
goodName, RegionName, mrkdmd, period );</span><span style='color:black'><o:p></o:p></span></p>

<p class=MsoNormal><span style='color:black'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal><span style='color:black'>The</span><span style='font-size:
9.0pt;font-family:Monaco;color:black'> subsec.setoutput</span><span
style='color:black'> call propagates this demand through the subsectors and
then to </span>technologies, which determine how to supply this demand. These
are added up via the .<span style='font-size:9.0pt;font-family:Monaco'>sumoutput</span>
rou<span style='color:black'>tines at each level.<o:p></o:p></span></p>

<p class=MsoNormal><span style='color:black'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal><span style='color:black'>The supply in the market place
object is then set to this value via within region::</span><span
style='font-size:9.0pt;font-family:Monaco;color:black'>finalsupply</span><span
style='color:black'> via:<o:p></o:p></span></p>

<p class=MsoNormal><span style='color:black'><span style='mso-tab-count:1'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span
style='font-size:9.0pt;font-family:Monaco;color:black'>mrksupply =
supplysector[i].getoutput( period );</span><span style='color:black'><o:p></o:p></span></p>

<p class=MsoNormal><span style='color:black'><span style='mso-tab-count:1'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span
style='font-size:9.0pt;font-family:Monaco;color:black'>marketplace.setsupply(
goodName, RegionName, mrksupply, period )</span><span style='color:black'><o:p></o:p></span></p>

<p class=MsoNormal><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<h1>SIMULTANEITY </h1>

<p class=MsoNormal><span style='color:black'>The above solution for supply and
demand of secondary goods assumes that the demand can first be determined and
then passed to the supply sectors. This is what is done in the legacy version of the MiniCAM. There
are situations where this is not possible. One such is where hydrogen
production can use electricity and electricity can use hydrogen. In such cases
the solution mechanism can be used to supply trial values for prices and
demands. <o:p></o:p></span></p>

<p class=MsoNormal><span style='color:black'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal><span style='color:black'>The solution to simultaneity
issues occurs entirely within the market and marketplace objects and is
transparent to the rest of the model. The model first searches for
simultaneities within each region with method </span><span style='font-size:
9.0pt;font-family:Monaco;color:black'>Region::findSimul</span><span
style='color:black'>. For each simultaneity found, method</span><span
style='font-size:9.0pt;color:black'> </span><span style='font-size:9.0pt;
font-family:Monaco;color:black'>Marketplace::resetToPriceMarket</span><span
style='color:black'> resets those markets to deal with this. This entails the
following changes:<o:p></o:p></span></p>

<p class=MsoNormal><span style='font-size:7.0pt;color:black'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:.75in;text-indent:-.25in;mso-list:l0 level1 lfo2;
tab-stops:list .75in'><![if !supportLists]><span style='color:black'>1)<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><![endif]><span
style='color:black'>The marketType of the market in question (<i>e.g.</i></span><span
style='color:black'> electricity) is set to a PRICE market. This means that
this market supplies a trial price for that market instead of the price
determined by the supply routines. This makes this price available to any part
of the model at any time.<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:.75in;text-indent:-.25in;mso-list:l0 level1 lfo2;
tab-stops:list .75in'><![if !supportLists]><span style='color:black'>2)<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><![endif]><span
style='color:black'>A corresponding DEMAND market is also created. This market
supplies a trial demand for this good to the model. This market is created with
the name </span><span style='font-size:9.0pt;font-family:Monaco;color:#891315'>&quot;Demand_internal&quot;</span><span
style='color:black'> appended to the name of the good. The &quot;_</span><span
style='font-size:9.0pt;font-family:Monaco;color:#891315'>internal</span><span
style='color:black'>&quot; suffix is intended to denote an internally used
market. If the user names an explicit market with this name through input data
then this mechanism may fail. <o:p></o:p></span></p>

<p class=MsoNormal><span style='font-size:7.0pt;color:black'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal><span style='color:black'>These markets are internal to the
marketplace object, they are not accessed directly by the rest of the model.
Routines such as setDemand, getPrice, etc. are re-directed appropriately to
set, or get, the appropriate quantities from the marketplace. <o:p></o:p></span></p>

<p class=MsoNormal><span style='color:black'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal><span style='color:black'>For example, under a normal market
good, a call to setdemand sets the </span><span style='font-size:9.0pt;
font-family:Monaco;color:black'>.demand </span><span style='color:black'>attribute
of the specified market. If this is a PRICE market, then the value passed by
setDemand actually sets the </span><span style='font-size:9.0pt;font-family:
Monaco;color:black'>.demand</span><span style='color:black'> attribute of the
corresponding DEMAND market.<span style="mso-spacerun: yes">&nbsp;
</span>Similarly, the getDemand method will return the </span><span
style='font-size:9.0pt;font-family:Monaco;color:black'>.demand</span><span
style='color:black'> attribute of a normal market, but for a PRICE market will
return the </span><span style='font-size:9.0pt;font-family:Monaco;color:black'>.demand</span><span
style='color:black'> attribute of the corresponding DEMAND market.<o:p></o:p></span></p>

<p class=MsoNormal><span style='color:black'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal><span style='color:black'>These changes occur only within
the marketplace object. The rest of the model simply uses the market access
methods (getPrice, getDemand, setSupply, setPrice, etc.) as normal. If a new
kind of simultaneity arises then all that should need to be done is to modify
the search routine to find that type of issue and set up the new markets.<o:p></o:p></span></p>

<p class=MsoNormal><span style='color:black'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

</p>


</div>

</body>

</html>
