<?xml version="1.0" encoding="UTF-8"?>
<queries>
   <queryGroup name="Emissions">
      <emissionsQueryBuilder title="CO2 Emissions By Fuel">
         <axis1 name="fuel">input[@name]</axis1>
         <axis2 name="Year">carbon-content[@vintage]</axis2>
         <xPath buildList="true" dataName="emissions" group="true" sumAll="false">/*[@type = 'input']/carbon-content/node()</xPath>
         <comments>&lt;font color="red"&gt;TODO:&lt;/font&gt; These values are just the carbon content and
sequestration &lt;br&gt;needs to be taken into account.  Also these value should be categorized&lt;br&gt;
by primary fuel such as oil, gas, coal.</comments>
      </emissionsQueryBuilder>
      <emissionsQueryBuilder title="CO2 Emissions By Sector">
         <axis1 name="sector">sector</axis1>
         <axis2 name="Year">emissions</axis2>
         <xPath buildList="true" dataName="emissions" group="true" sumAll="false">*[@type = 'sector' ]//*[@type = 'GHG' and ((@name='CO2') )]/emissions/node()</xPath>
         <comments/>
      </emissionsQueryBuilder>
   </queryGroup>
   <queryGroup name="End-Use">
      <supplyDemandQuery title="End-Use Service By Sector">
         <axis1 name="sector">final-demand[@name]</axis1>
         <axis2 name="Year">service[@year]</axis2>
         <xPath buildList="true" dataName="output" group="false" sumAll="false">*[@type='final-demand']/service/node()</xPath>
         <comments/>
      </supplyDemandQuery>
   </queryGroup>
   <queryGroup name="Primary Energy Consumption">
      <supplyDemandQuery title="Primary Energy Consumption By Fuel Plus List">
         <axis1 name="fuel">keyword[@primary-consumption]</axis1>
         <axis2 name="Year">demand-physical[@vintage]</axis2>
         <xPath buildList="true" dataName="input" group="true" sumAll="false"> 
	 declare function local:get-primary-fuel-list() as xs:string* {
		 (: This list describes the which input's fuels are
		    a primary fuel
		 :)
		 ('coal', 'biomass', 'natural gas', 'crude oil', 'shale oil')
	 };
	 declare function local:get-primary-renewable-list() as xs:string* {
		 (: This list describes the technologies that are primary renewable,
		    and their output needs to be weighted by the avareage fossil 
		    efficiency
		 :)
		 ('Gen_II_LWR', 'Gen_III', 'hydro', 'PV', 'wind', 'exotics')
	 };
	 declare function local:get-average-fossil-eff-list() as xs:string* {
		 (: This list describes the technologies who's efficiencies are used to
		    calculate the average fossil efficiency
		 :)
		 ('Oil (existing)', 'Oil (IGCC)', 'Oil (peak load conv)', 'Oil (base load conv)', 
		 'Gas (existing)', 'Gas (CC)', 'Gas (peak load conv)', 'Gas (base load conv)',
		 'Coal (existing)', 'Coal (IGCC)', 'Coal (conv pul)')
	 };
	 declare function local:get-primary-renewable-H2-list() as xs:string* {
		 (: This list describes the technologies that are primary renewable for H2,
		    and their output needs to be weighted by the avareage fossil 
		    efficiency
		 :)
		 ('electrolysis')
	 };
	 declare function local:get-average-fossil-eff-H2-list() as xs:string* {
		 (: This list describes the technologies for H2 who's efficiencies are used to
		    calculate the average fossil efficiency
		 :)
		 ('natural gas steam reforming', 'coal chemical', 'biomass to H2')
	 };
	 declare function local:get-weighted-eff($outputs as node()*) as node()* {
		 unordered {
		 for $year in distinct-values($outputs/physical-output/@vintage)
		 let $eff_unweight := sum(
			 for $res in $outputs
			 let $eff_curr := $res/following-sibling::input-energy/IO-coefficient[@vintage=$year]
			 where $res/physical-output/@vintage = $year
			 return $res/physical-output[@vintage=$year] div $eff_curr),
		 $weight := sum(
			 for $res in $outputs
			 where $res/physical-output/@vintage = $year
			 return $res/physical-output),
		 $eff_weighted := $eff_unweight div $weight
		 return
			 element efficiency-weighted {
				 attribute year { $year },
				 text { $eff_weighted }
			 }
		 }
	 };
	 declare function local:append-heirarchy($parent as node(), $append as node()) as node() {
		 let $new_node := element {local-name($parent)} {$parent/@*, $append} 	
		 return
		 if(local-name($parent) != 'scenario')
		 then local:append-heirarchy($parent/parent::node(), $new_node)
		 else document { $new_node } 
	 };  
	 declare function local:get-primary-renewable($outputs as node()*, $weighted_effs as node()*) as node()* {
	 unordered { 	
	 for $output in $outputs,
	 $weighted_eff in $weighted_effs
	 let $new_output :=  element tempParent {
	 element input {
		 attribute type {'input'},
		 attribute name {'asdf'},
		 element demand-physical {
			 attribute vintage {$output/@vintage},
			 attribute unit {$output/@unit},
			 text { $output div $weighted_eff }
		 },
		 element keyword {
			 attribute primary-consumption { if($output/parent::*/following-sibling::keyword[fn:exists(@primary-renewable)]) 
						 then $output/parent::*/following-sibling::keyword/@primary-renewable
						 else $output/parent::node()/parent::*/@name
		       }
		 }
	 }
	 },
	 $new_root := local:append-heirarchy($output/parent::node()/parent::node(), $new_output)
	 where $output/@vintage = $weighted_eff/@year
	 return $new_root//text()
	 } 
	 };
	 declare function local:check-keyword($values as node()*) as node()* {
	 	unordered {
		for $value in $values
		let $input := $value/parent::node()/parent::node(),
		    $keyword_name :=
		        if($input/following-sibling::keyword[fn:exists(@primary-consumption)])
			then $input/following-sibling::keyword/@primary-consumption
			else $input/@name,
		    $new_parent := element {local-name($input)} {$input/@*, 
			$value/parent::node(),
		        element keyword { attribute primary-consumption {$keyword_name} }
		        },
		    $new_root := local:append-heirarchy($input/parent::node(), $new_parent)
		return $new_root//text()
		}
	};

	 declare function local:run-primary-energy($scenarios as xs:string*, $regions as xs:string*, $collection as xs:string) as node()* { 	
	 unordered { 	
	 for $scenario in $scenarios, 	    
	 $region in $regions 	
	 let $scenario_split := tokenize($scenario, ' '), 	    
	 $isGlobal := if($region = 'Global') then true() else false() 	
	 return (: get renewables from electricity :)
	 local:get-primary-renewable(collection($collection)/scenario[@name = $scenario_split[1] and @date = $scenario_split[2]]/world/*[@type = 'region' and @name=$region or $isGlobal]/*[@type='sector' (: collapse :) and @name='electricity']//*[@type='output'][following-sibling::keyword[fn:exists(@primary-renewable)] or fn:exists(fn:index-of(local:get-primary-renewable-list(), parent::*/@name))]/physical-output, local:get-weighted-eff(collection($collection)/scenario[@name = $scenario_split[1] and @date = $scenario_split[2]]/world/*[@type = 'region' and @name=$region or $isGlobal]/*[@type='sector' (: collapse :) and @name='electricity']//*[@type='technology' (: collapse :) and (child::keyword[fn:exists(@average-fossil-efficiency)] or fn:exists(fn:index-of(local:get-average-fossil-eff-list(), @name)))]/*[@type='output'])) 
	 | (: get renewables from H2ProdCS :)
	 local:get-primary-renewable(collection($collection)/scenario[@name = $scenario_split[1] and @date = $scenario_split[2]]/world/*[@type = 'region' and @name=$region or $isGlobal]/*[@type='sector' (: collapse :) and @name='H2ProdCS']/*[@type='subsector' (: collapse :) and fn:not(@name='electrolysis')]//*[@type='output'][following-sibling::keyword[fn:exists(@primary-renewable)] or fn:exists(fn:index-of(local:get-primary-renewable-H2-list(), parent::*/@name))]/physical-output, local:get-weighted-eff(collection($collection)/scenario[@name = $scenario_split[1] and @date = $scenario_split[2]]/world/*[@type = 'region' and @name=$region or $isGlobal]/*[@type='sector' (: collapse :) and @name='H2ProdCS']//*[@type='technology' (: collapse :) and (child::keyword[fn:exists(@average-fossil-efficiency)] or fn:exists(fn:index-of(local:get-average-fossil-eff-H2-list(), @name)))]/*[@type='output'])) 
	 | (: get renewables from H2ProdDist :)
	 local:get-primary-renewable(collection($collection)/scenario[@name = $scenario_split[1] and @date = $scenario_split[2]]/world/*[@type = 'region' and @name=$region or $isGlobal]/*[@type='sector' (: collapse :) and @name='H2ProdDist']/*[@type='subsector' (: collapse :) and fn:not(@name='electrolysis')]//*[@type='output'][following-sibling::keyword[fn:exists(@primary-renewable)] or fn:exists(fn:index-of(local:get-primary-renewable-H2-list(), parent::*/@name))]/physical-output, local:get-weighted-eff(collection($collection)/scenario[@name = $scenario_split[1] and @date = $scenario_split[2]]/world/*[@type = 'region' and @name=$region or $isGlobal]/*[@type='sector' (: collapse :) and @name='H2ProdDist']//*[@type='technology' (: collapse :) and (child::keyword[fn:exists(@average-fossil-efficiency)] or fn:exists(fn:index-of(local:get-average-fossil-eff-H2-list(), @name)))]/*[@type='output'])) 
	 | (: get the primaries :)
	 local:check-keyword(collection($collection)/scenario[@name = $scenario_split[1] and @date = $scenario_split[2]]/world/*[@type = 'region' and @name=$region or $isGlobal]//*[@type='input' (: collapse :) ][following-sibling::keyword[fn:exists(@primary-consumption)] or fn:exists(fn:index-of(local:get-primary-fuel-list(), @name))]/demand-physical/text())
	 } 
	 };  
	 local:run-primary-energy((:scenarios:), (:regions:), (:collection:)) 	 
	 </xPath>
         <comments>Weighted average fossil efficiency applied to nuclear, hydro and renewable. </comments>
      </supplyDemandQuery>
   </queryGroup>
   <queryGroup name="Final Energy Consumption">
      <supplyDemandQuery title="Final Energy Consumption By Fuel">
         <axis1 name="fuel">input[@name]</axis1>
         <axis2 name="Year">demand-physical[@vintage]</axis2>
         <xPath buildList="true" dataName="input" group="true" sumAll="false">*[@type='sector' (: collapse :) and (@name='building' or @name='industry' or @name='transportation' or @name='Cement')]//*[@type='input']/demand-physical/node()</xPath>
         <comments>Warning: includes energy consumption by Non-Energy Industries.</comments>
      </supplyDemandQuery>
      <supplyDemandQuery title="Final Energy Consumption By Sector">
         <axis1 name="sector">sector</axis1>
         <axis2 name="Year">demand-physical[@vintage]</axis2>
         <xPath buildList="true" dataName="input" group="true" sumAll="false">*[@type='sector' and (@name='building' or @name='industry' or @name='transportation' or @name='Cement')]//*[@type='input' (: collapse :)]/demand-physical/node()</xPath>
         <comments>Warning: includes energy consumption by Non-Energy Industries.</comments>
      </supplyDemandQuery>
      <supplyDemandQuery title="Final Energy Consumption by Sector and Subsector">
         <axis1 name="Subsector">subsector</axis1>
         <axis2 name="Year">demand-physical[@vintage]</axis2>
         <xPath buildList="true" dataName="input" group="false" sumAll="false">*[@type='sector' and (@name='building' or @name='industry' or @name='transportation' or @name='Cement')]/*[@type='subsector']//*[@type='input' (: collapse :)]/demand-physical/node()</xPath>
         <comments/>
      </supplyDemandQuery>
      <supplyDemandQuery title="Final Energy Consumption By Fuel Using Keywords">
         <axis1 name="fuel">keyword[@final-energy-fuel]</axis1>
         <axis2 name="Year">demand-physical[@vintage]</axis2>
         <xPath buildList="true" dataName="input" group="true" sumAll="false">/*[@type='input' (: collapse :) and fn:exists(child::keyword/@final-energy-fuel)]/demand-physical/node()</xPath>
         <comments/>
      </supplyDemandQuery>
      <supplyDemandQuery title="Final Energy Consumption By Sector Using Keywords">
         <axis1 name="sector">sector</axis1>
         <axis2 name="Year">demand-physical[@vintage]</axis2>
         <xPath buildList="true" dataName="input" group="true" sumAll="false">*[@type='sector' and (@name='building' or @name='industry' or @name='transportation' or @name='Cement')]//*[@type='input' (: collapse :) and fn:exists(child::keyword/@final-energy-fuel)]/demand-physical/node()</xPath>
         <comments/>
      </supplyDemandQuery>
   </queryGroup>
   <queryGroup name="Fuel Consumption (Not Summable)">
      <supplyDemandQuery title="Energy Consumption By Fuel">
         <axis1 name="fuel">input[@name]</axis1>
         <axis2 name="Year">demand-physical[@vintage]</axis2>
         <xPath buildList="true" dataName="input" group="false" sumAll="false">*[@type='sector' (: collapse :) and (exists(child::keyword/@supplysector) or local-name() = 'supplysector')]//*[@type='input']/demand-physical/node()</xPath>
         <comments>Supply sectors only.</comments>
      </supplyDemandQuery>
      <supplyDemandQuery title="Energy Consumption By Sector">
         <axis1 name="sector">sector</axis1>
         <axis2 name="Year">demand-physical[@vintage]</axis2>
         <xPath buildList="true" dataName="input" group="false" sumAll="false">*[@type='sector' and (exists(child::keyword/@supplysector) or local-name() = 'supplysector')]//*[@type='input']/demand-physical/node()</xPath>
         <comments>Supply sectors only.</comments>
      </supplyDemandQuery>
   </queryGroup>
   <queryGroup name="Electricity Generation">
      <supplyDemandQuery title="Electricity Generation By Fuel">
         <axis1 name="fuel">subsector</axis1>
         <axis2 name="Year">physical-output[@vintage]</axis2>
         <xPath buildList="true" dataName="output" group="true" sumAll="false">*[@type = 'sector' (: collapse :) and ((@name='electricity') )]/*[@type = 'subsector']//*[@type='output']/physical-output/node()</xPath>
         <comments/>
      </supplyDemandQuery>
      <supplyDemandQuery title="Electricity Generation By Technology">
         <axis1 name="technology">technology</axis1>
         <axis2 name="Year">physical-output[@vintage]</axis2>
         <xPath buildList="true" dataName="output" group="true" sumAll="false">*[@type = 'sector' (: collapse :) and ((@name='electricity') )]//*[@type = 'technology']/*[@type='output']/physical-output/node()</xPath>
         <comments/>
      </supplyDemandQuery>
      <supplyDemandQuery title="Fuel Consumption for Electricity Generation">
         <axis1 name="fuel">subsector</axis1>
         <axis2 name="Year">demand-physical[@vintage]</axis2>
         <xPath buildList="true" dataName="input" group="true" sumAll="false">*[@type = 'sector' (: collapse :) and ((@name='electricity') )]/*[@type = 'subsector']//*[@type='input' (: collapse :)]/demand-physical/node()</xPath>
         <comments/>
      </supplyDemandQuery>
   </queryGroup>
   <queryGroup name="Refinery">
      <supplyDemandQuery title="Refinery Output By Fuel">
         <axis1 name="fuel">subsector</axis1>
         <axis2 name="Year">physical-output[@vintage]</axis2>
         <xPath buildList="true" dataName="output" group="true" sumAll="false">*[@type = 'sector' (: collapse :) and ((@name='refined oil') )]/*[@type = 'subsector']//*[@type='output']/physical-output/node()</xPath>
         <comments/>
      </supplyDemandQuery>
      <supplyDemandQuery title="Refinery Output By Technology">
         <axis1 name="technology">technology</axis1>
         <axis2 name="Year">physical-output[@vintage]</axis2>
         <xPath buildList="true" dataName="output" group="true" sumAll="false">*[@type = 'sector' (: collapse :) and ((@name='refined oil') )]//*[@type = 'technology']/*[@type='output']/physical-output/node()</xPath>
         <comments/>
      </supplyDemandQuery>
      <supplyDemandQuery title="Fuel Consumption for Refinery">
         <axis1 name="fuel">subsector</axis1>
         <axis2 name="Year">demand-physical[@vintage]</axis2>
         <xPath buildList="true" dataName="input" group="true" sumAll="false">*[@type = 'sector' (: collapse :) and ((@name='refined oil') )]/*[@type = 'subsector']//*[@type='input' (: collapse :)]/demand-physical/node()</xPath>
         <comments/>
      </supplyDemandQuery>
   </queryGroup>
   <queryGroup name="Intermediate Production">
      <queryGroup name="Agriculture"/>
      <queryGroup name="Hydrogen"/>
      <queryGroup name="Natural Gas T&amp;D"/>
      <supplyDemandQuery title="Output of Intermediate Production Sectors">
         <axis1 name="sector">sector[@name]</axis1>
         <axis2 name="Year">physical-output[@vintage]</axis2>
         <xPath buildList="true" dataName="output" group="false" sumAll="false">*[@type='sector' and (exists(child::keyword/@supplysector) or local-name() = 'supplysector')]//*[@type='output']/physical-output/node()</xPath>
         <comments/>
      </supplyDemandQuery>
   </queryGroup>
   <queryGroup name="Resources">
      <resourceQuery title="Available Resources">
         <axis1 name="resource">resource</axis1>
         <axis2 name="Year">available</axis2>
         <xPath buildList="true" dataName="available" group="false" sumAll="false">*[@type = 'resource']//grade/available/node()</xPath>
         <comments/>
      </resourceQuery>
   </queryGroup>
   <queryGroup name="Prices">
      <supplyDemandQuery title="Prices by Sector (aggregate)">
         <axis1 name="sector">sector</axis1>
         <axis2 name="Year">cost</axis2>
         <xPath buildList="true" dataName="Price" group="false" sumAll="false">*[@type = 'sector']/cost/text()</xPath>
         <comments/>
      </supplyDemandQuery>
      <supplyDemandQuery title="Prices by Sector and Subsector (aggregate)">
         <axis1 name="subsector">subsector</axis1>
         <axis2 name="Year">cost</axis2>
         <xPath buildList="true" dataName="Price" group="false" sumAll="false">*[@type = 'sector']/*[@type = 'subsector']/cost/text()</xPath>
         <comments/>
      </supplyDemandQuery>
      <supplyDemandQuery title="Prices: Technology Total Cost">
         <axis1 name="technology">technology</axis1>
         <axis2 name="Year">technology</axis2>
         <xPath buildList="true" dataName="cost" group="false" sumAll="false">*[@type = 'sector']/*[@type = 'subsector']/*[@type = 'technology']/cost/text()</xPath>
         <comments/>
      </supplyDemandQuery>
      <supplyDemandQuery title="Prices: Technology Fuel Cost">
         <axis1 name="technology">technology</axis1>
         <axis2 name="Year">price-paid[@vintage]</axis2>
         <xPath buildList="true" dataName="fuel cost" group="false" sumAll="false">*[@type = 'sector']/*[@type = 'subsector']/*[@type = 'technology']/*[@type='input' and @name!='non-energy']/price-paid/text()</xPath>
         <comments/>
      </supplyDemandQuery>
      <supplyDemandQuery title="Prices: Technology Non-Energy Cost">
         <axis1 name="technology">technology</axis1>
         <axis2 name="Year">price-paid[@vintage]</axis2>
         <xPath buildList="true" dataName="non energy cost" group="false" sumAll="false">*[@type = 'sector']/*[@type = 'subsector']/*[@type = 'technology']/*[@type='input' (: collapse :) and @name='non-energy']/price-paid/text()</xPath>
         <comments/>
      </supplyDemandQuery>
   </queryGroup>
   <queryGroup name="GDP">
      <gdpQueryBuilder title="Total Labor Productivity">
         <axis1 name="Region">region</axis1>
         <axis2 name="Year">total-labor-productivity</axis2>
         <xPath buildList="true" dataName="total-labor-productivity" group="false" sumAll="false">GDP/total-labor-productivity/text()</xPath>
         <comments/>
      </gdpQueryBuilder>
      <gdpQueryBuilder title="Per Capita (Mer)">
         <axis1 name="Region">region</axis1>
         <axis2 name="Year">gdp-per-capita-mer</axis2>
         <xPath buildList="true" dataName="gdp-per-capita-mer" group="false" sumAll="false">GDP/gdp-per-capita-mer/text()</xPath>
         <comments/>
      </gdpQueryBuilder>
      <gdpQueryBuilder title="Per Capita (PPP)">
         <axis1 name="Region">region</axis1>
         <axis2 name="Year">gdp-per-capita-ppp</axis2>
         <xPath buildList="true" dataName="gdp-per-capita-ppp" group="false" sumAll="false">GDP/gdp-per-capita-ppp/text()</xPath>
         <comments/>
      </gdpQueryBuilder>
      <gdpQueryBuilder title="Market Exchange Rate Based (MER)">
         <axis1 name="Region">region</axis1>
         <axis2 name="Year">gdp-mer</axis2>
         <xPath buildList="true" dataName="gdp-mer" group="false" sumAll="false">GDP/gdp-mer/text()</xPath>
         <comments/>
      </gdpQueryBuilder>
   </queryGroup>
   <queryGroup name="Demographics">
      <demographicsQuery title="Total Population">
         <axis1 name="region">region</axis1>
         <axis2 name="Year">populationMiniCAM</axis2>
         <xPath buildList="true" dataName="total-population" group="true" sumAll="false">demographics/populationMiniCAM/total-population/node()</xPath>
         <comments/>
      </demographicsQuery>
   </queryGroup>
   <queryGroup name="Market">
      <marketQuery title="Prices for All Markets">
         <axis1 name="market">market</axis1>
         <axis2 name="Year">market</axis2>
         <xPath buildList="true" dataName="price" group="false" sumAll="false">Marketplace/market[true()]/price/node()</xPath>
         <comments/>
      </marketQuery>
      <marketQuery title="Supply of All Market Goods">
         <axis1 name="market">market</axis1>
         <axis2 name="Year">market</axis2>
         <xPath buildList="true" dataName="supply" group="false" sumAll="false">Marketplace/market[true()]/supply/node()</xPath>
         <comments/>
      </marketQuery>
      <marketQuery title="Demand of All Market Goods">
         <axis1 name="market">market</axis1>
         <axis2 name="Year">market</axis2>
         <xPath buildList="true" dataName="demand" group="false" sumAll="false">Marketplace/market[true()]/demand/node()</xPath>
         <comments/>
      </marketQuery>
   </queryGroup>
   <queryGroup name="Buildings">
      <supplyDemandQuery title="Buildings Output By Technology">
         <axis1 name="technology">technology</axis1>
         <axis2 name="Year">physical-output[@vintage]</axis2>
         <xPath buildList="true" dataName="output" group="true" sumAll="false">*[@type = 'sector' (: collapse :) and ((local-name()='buildingservicesupply') or @name='building')]//*[@type = 'technology']/*[@type='output']/physical-output/node()</xPath>
         <comments/>
      </supplyDemandQuery>
      <supplyDemandQuery title="Fuel Consumption for Buildings">
         <axis1 name="fuel">subsector</axis1>
         <axis2 name="Year">demand-physical[@vintage]</axis2>
         <xPath buildList="true" dataName="input" group="true" sumAll="false">*[@type = 'sector' (: collapse :) and ((local-name()='buildingservicesupply') or @name='building' )]/*[@type = 'subsector']//*[@type='input']/demand-physical/node()</xPath>
         <comments/>
      </supplyDemandQuery>
      <supplyDemandQuery title="Internal Gains By Sector">
         <axis1 name="sector">sector[@name]</axis1>
         <axis2 name="Year">internal-gains[@year]</axis2>
         <xPath buildList="true" dataName="internal-gains" group="true" sumAll="false">*[@type = 'sector' ]/internal-gains/text()</xPath>
         <comments/>
      </supplyDemandQuery>
      <supplyDemandQuery title="Fuel Consumption for Buildings By Technology">
         <axis1 name="technology">technology</axis1>
         <axis2 name="Year">demand-physical[@vintage]</axis2>
         <xPath buildList="true" dataName="input" group="true" sumAll="false">*[@type = 'sector' (: collapse :) and ((local-name()='buildingservicesupply') or @name='building')]//*[@type = 'technology']/*[@type='input' (: collapse :)]/demand-physical/node()</xPath>
         <comments/>
      </supplyDemandQuery>
   </queryGroup>
   <queryGroup name="Policy Costs">
      <costCurveQuery title="Undiscounted Policy Cost">
         <axis1 name="UndiscountedCost">UndiscountedCost</axis1>
         <axis2 name="Region">UndiscountedCost</axis2>
         <xPath buildList="true" dataName="Undiscounted Cost" group="false" sumAll="false">/text()</xPath>
         <comments/>
      </costCurveQuery>
      <costCurveQuery title="Policy Cost By Period">
         <axis1 name="Region">Curve</axis1>
         <axis2 name="Year">DataPoint</axis2>
         <xPath buildList="true" dataName="Cost" group="false" sumAll="false">PointSet/DataPoint/y/text()</xPath>
         <comments/>
      </costCurveQuery>
   </queryGroup>
   <queryGroup name="Efficiencies">
      <supplyDemandQuery title="Efficiencies By Technology">
         <axis1 name="Technology">technology[@name]</axis1>
         <axis2 name="Year">IO-coefficient[@vintage]</axis2>
         <xPath buildList="true" dataName="efficiency" group="false" sumAll="false">/*[@type = 'technology' ]/*[@type='input']/IO-coefficient/text()</xPath>
         <comments>&lt;font color="red"&gt;TODO:&lt;/font&gt; efficiency is 1/coefficient which this query is currently pulling.</comments>
      </supplyDemandQuery>
   </queryGroup>
   <queryGroup name="Transportation">
      <supplyDemandQuery title="Transportation Service By Mode">
         <axis1 name="Subsector">subsector</axis1>
         <axis2 name="Year">physical-output[@vintage]</axis2>
         <xPath buildList="true" dataName="output" group="true" sumAll="false">*[@type = 'sector' and (@name='MilitaryOtherTransport' or @name='Passenger' or @name='Freight' or @name='transportation')]/*[@type = 'subsector']//*[@type='output']/physical-output/node()</xPath>
         <comments/>
      </supplyDemandQuery>
      <supplyDemandQuery title="Transportation Service By Technology">
         <axis1 name="Technology">technology</axis1>
         <axis2 name="Year">physical-output[@vintage]</axis2>
         <xPath buildList="true" dataName="output" group="true" sumAll="false">*[@type = 'sector' and (@name='MilitaryOtherTransport' or @name='Passenger' or @name='Freight' or @name='transportation')]//*[@type = 'technology']/*[@type='output']/physical-output/node()</xPath>
         <comments/>
      </supplyDemandQuery>
      <supplyDemandQuery title="Fuel Consumption for Transportation By Mode">
         <axis1 name="Subsector">subsector</axis1>
         <axis2 name="Year">demand-physical[@vintage]</axis2>
         <xPath buildList="true" dataName="input" group="true" sumAll="false">*[@type = 'sector' and (@name='MilitaryOtherTransport' or @name='Passenger' or @name='Freight' or @name='transportation')]/*[@type = 'subsector']//*[@type='input']/demand-physical/node()</xPath>
         <comments/>
      </supplyDemandQuery>
      <supplyDemandQuery title="Fuel Consumption for Transportation By Technology">
         <axis1 name="Technology">technology</axis1>
         <axis2 name="Year">demand-physical[@vintage]</axis2>
         <xPath buildList="true" dataName="input" group="true" sumAll="false">*[@type = 'sector' and (@name='MilitaryOtherTransport' or @name='Passenger' or @name='Freight' or @name='transportation')]//*[@type = 'technology']/*[@type='input']/demand-physical/node()</xPath>
         <comments/>
      </supplyDemandQuery>
      <supplyDemandQuery title="Non Energy Cost for Transportation By Technology">
         <axis1 name="Technology">technology</axis1>
         <axis2 name="Year">price-paid[@vintage]</axis2>
         <xPath buildList="true" dataName="input" group="true" sumAll="false">*[@type = 'sector'and (@name='MilitaryOtherTransport' or @name='Passenger' or @name='Freight' or @name='transportation')]//*[@type='technology']/*[@type='input' and @name='non-energy']/price-paid/node()</xPath>
         <comments/>
      </supplyDemandQuery>
      <supplyDemandQuery title="Transportation Service Output By Mode">
         <axis1 name="Subsector">subsector</axis1>
         <axis2 name="Year">technology</axis2>
         <xPath buildList="true" dataName="output" group="true" sumAll="false">*[@type = 'sector' and (@name='MilitaryOtherTransport' or @name='Passenger' or @name='Freight' or @name='transportation')]/*[@type = 'subsector']//service-output/node()</xPath>
         <comments/>
      </supplyDemandQuery>
      <supplyDemandQuery title="Transportation Load Factor By Mode">
         <axis1 name="Subsector">subsector</axis1>
         <axis2 name="Year">technology</axis2>
         <xPath buildList="true" dataName="output" group="true" sumAll="false">*[@type = 'sector' and (@name='MilitaryOtherTransport' or @name='Passenger' or @name='Freight' or @name='transportation')]/*[@type = 'subsector']//load-factor/node()</xPath>
         <comments/>
      </supplyDemandQuery>
   </queryGroup>
   <queryGroup name="Land Use">
      <query title="Land Allocation">
         <axis1 name="land-allocation">LandLeaf</axis1>
         <axis2 name="Year">land-allocation[@year]</axis2>
         <xPath buildList="true" dataName="land-allocation" group="true" sumAll="false">/LandAllocatorNode[@name='root' or @type='LandAllocatorNode' (: collapse :)]//land-allocation/text()</xPath>
         <comments/>
      </query>
      <query title="Intrinsic Rate">
         <axis1 name="intrinsic-rate">LandLeaf</axis1>
         <axis2 name="Year">intrinsic-rate[@year]</axis2>
         <xPath buildList="true" dataName="intrinsic-rate" group="true" sumAll="false">/LandAllocatorNode[@name='root' or @type='LandAllocatorNode' (: collapse :)]//intrinsic-rate/text()</xPath>
         <comments/>
      </query>
      <query title="Intrinsic Yield Mode">
         <axis1 name="intrinsic-yield-mode">LandLeaf</axis1>
         <axis2 name="Year">intrinsic-yield-mode[@year]</axis2>
         <xPath buildList="true" dataName="intrinsic-yield-mode" group="true" sumAll="false">/LandAllocatorNode[@name='root' or @type='LandAllocatorNode' (: collapse :)]//intrinsic-yield-mode/text()</xPath>
         <comments/>
      </query>
      <query title="Cal Observed Yield">
         <axis1 name="cal-observed-yield">LandLeaf</axis1>
         <axis2 name="Year">cal-observed-yield[@year]</axis2>
         <xPath buildList="true" dataName="cal-observed-yield" group="true" sumAll="false">/LandAllocatorNode[@name='root' or @type='LandAllocatorNode' (: collapse :)]//cal-observed-yield/text()</xPath>
         <comments/>
      </query>
      <query title="Land Use Change Emission">
         <axis1 name="land-use-change-emission">LandLeaf</axis1>
         <axis2 name="Year">land-use-change-emission[@year]</axis2>
         <xPath buildList="true" dataName="land-use-change-emission" group="true" sumAll="false">/LandAllocatorNode[@name='root' or @type='LandAllocatorNode' (: collapse :)]//land-use-change-emission/text()</xPath>
         <comments/>
      </query>
   </queryGroup>
</queries>

